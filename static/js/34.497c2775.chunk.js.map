{"version":3,"file":"static/js/34.497c2775.chunk.js","mappings":"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","sources":["components/settings/SettingsSection.tsx","components/settings/UserSettings.tsx","components/settings/LanguageSettings.tsx","pages/Settings.tsx"],"sourcesContent":["import { Wrap, Flex, Heading, Divider } from \"@chakra-ui/react\";\n\nexport function SettingsSection({\n  title,\n  children,\n}: {\n  title: string;\n  children: React.ReactNode;\n}) {\n  return (\n    <>\n      <Wrap\n        justify=\"flex-end\"\n        spacingX={4}\n        spacingY={8}\n        my={8}\n        justifyContent=\"center\"\n        minH={100}\n      >\n        <Heading flexGrow={1} mb={2} size={\"md\"}>\n          {title}\n        </Heading>\n        <Flex\n          flexBasis={400}\n          justifyContent=\"center\"\n          alignItems={[\"center\", \"start\"]}\n          flexDirection={\"column\"}\n        >\n          {children}\n        </Flex>\n      </Wrap>\n      <Divider />\n    </>\n  );\n}\n","import {\n  Button,\n  Input,\n  InputGroup,\n  InputRightElement,\n  Heading,\n  Center,\n  HStack,\n  Avatar,\n  VStack,\n  Text,\n  Tag,\n  TagLeftIcon,\n  TagLabel,\n  Tooltip,\n  Wrap,\n  useBreakpointValue,\n  useToast,\n} from \"@chakra-ui/react\";\nimport { format } from \"date-fns-tz\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { FaDiscord, FaGoogle, FaTwitter } from \"react-icons/fa\";\nimport { useMutation } from \"react-query\";\nimport { useClient } from \"../../modules/client\";\nimport { LoginButtons } from \"../login/LoginButtons\";\nimport { LoginPanel } from \"../login/LoginPanel\";\nimport { SettingsSection } from \"./SettingsSection\";\n\nexport function UserSettings() {\n  const toast = useToast({\n    position: \"top-right\",\n  });\n  const { t } = useTranslation();\n  const { isLoggedIn, user, AxiosInstance, refreshUser } = useClient();\n  const isMobile = useBreakpointValue({ base: true, md: false });\n  const [newUsername, setNewUsername] = useState(\"\");\n\n  const { mutate: changeName, isLoading } = useMutation(\n    async (payload: string) =>\n      (\n        await AxiosInstance(\"/user/\", {\n          method: \"POST\",\n          data: { name: payload },\n        })\n      ).data,\n    {\n      onSuccess: (data, payload, ...rest) => {\n        refreshUser();\n        toast({\n          title: t(\"Username changed\"),\n          status: \"success\",\n        });\n        setNewUsername(\"\");\n      },\n    },\n  );\n  if (!isLoggedIn) {\n    return (\n      <Center>\n        <LoginPanel />\n      </Center>\n    );\n  }\n  return (\n    <>\n      <HStack\n        w=\"full\"\n        justify=\"center\"\n        p={{ base: 2, md: 8 }}\n        spacing={{ base: 6, md: 12 }}\n      >\n        <Avatar\n          boxSize={{ base: 24, md: 48 }}\n          bg=\"transparent\"\n          src={`https://api.dicebear.com/7.x/shapes/svg?seed=${user?.id}`}\n        />\n        <VStack\n          w={{ base: undefined, md: \"full\" }}\n          align=\"flex-start\"\n          spacing={{ base: 0, md: 2 }}\n        >\n          <Heading\n            size={{ base: \"xl\", md: \"2xl\" }}\n            fontWeight=\"black\"\n            wordBreak=\"break-all\"\n          >\n            {user?.username}\n          </Heading>\n          <Text\n            textTransform=\"capitalize\"\n            fontSize={{ base: \"xl\", md: \"2xl\" }}\n            color=\"gray.500\"\n          >\n            {user?.role} - {user?.contribution_count}pts\n          </Text>\n          <Wrap>\n            <Tooltip label={user?.google_id}>\n              <Tag colorScheme={user?.google_id ? \"n2\" : \"whiteAlpha\"}>\n                <TagLeftIcon as={FaGoogle} />\n                {!isMobile && <TagLabel>Google</TagLabel>}\n              </Tag>\n            </Tooltip>\n            <Tooltip label={user?.discord_id}>\n              <Tag colorScheme={user?.discord_id ? \"n2\" : \"whiteAlpha\"}>\n                <TagLeftIcon as={FaDiscord} />\n                {!isMobile && <TagLabel>Discord</TagLabel>}\n              </Tag>\n            </Tooltip>\n            <Tooltip label={user?.twitter_id}>\n              <Tag colorScheme={user?.twitter_id ? \"n2\" : \"whiteAlpha\"}>\n                <TagLeftIcon as={FaTwitter} />\n                {!isMobile && <TagLabel>Twitter</TagLabel>}\n              </Tag>\n            </Tooltip>\n          </Wrap>\n          {user?.created_at && (\n            <Text color=\"gray.500\">\n              {t(\"Joined {{created_at}}\", {\n                created_at: format(new Date(user.created_at), \"yyyy-MM-dd\"),\n              })}\n            </Text>\n          )}\n        </VStack>\n      </HStack>\n      <SettingsSection title={t(\"Change Username\")}>\n        <InputGroup>\n          <Input\n            placeholder={t(\"Username\")}\n            _placeholder={{ color: \"gray.500\" }}\n            type=\"text\"\n            value={newUsername}\n            onChange={(e) => setNewUsername(e.target.value.trim())}\n          />\n          <InputRightElement w=\"fit-content\">\n            <Button\n              roundedLeft=\"none\"\n              isDisabled={!newUsername}\n              isLoading={isLoading}\n              onClick={() => changeName(newUsername)}\n            >\n              {t(\"Change\")}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n        <Center w=\"full\"></Center>\n      </SettingsSection>\n      <SettingsSection title={t(\"Connect more accounts to Musicdex\")}>\n        <LoginButtons />\n      </SettingsSection>\n    </>\n  );\n}\n","import { useMemo } from \"react\";\nimport { Stack, Select, RadioGroup, Radio, Box, Icon } from \"@chakra-ui/react\";\nimport { useTranslation } from \"react-i18next\";\nimport { FaHeart } from \"react-icons/fa\";\nimport { useStoreActions, useStoreState } from \"../../store\";\nimport { SettingsSection } from \"./SettingsSection\";\n\nexport function LanguageSettings() {\n  const { t, i18n } = useTranslation();\n  const displayLangPrefs = useMemo(\n    () => [\n      { value: \"en\", display: \"English\", credit: \"@Holodex\" },\n      { value: \"en-GB\", display: \"English (British)\", credit: \"@Holodex\" },\n      { value: \"lol-PEKO\", display: \"English (PEKO)\", credit: \"@Holodex\" },\n      {\n        value: \"ja-JP\",\n        display: \"日本語\",\n        credit: \"Saginomiya#2353, ぴーまん#2976\",\n      },\n      { value: \"zh-TW\", display: \"繁體中文\", credit: \"angel84326#7887\" },\n      { value: \"zh-CN\", display: \"简体中文\", credit: \"ttg#6038\" },\n      { value: \"ko-KR\", display: \"한국어\", credit: \"AlexKoala#0253\" },\n      { value: \"es-MX\", display: \"Español Latino\", credit: \"Aldo#3682\" },\n      { value: \"ms-MY\", display: \"Bahasa Melayu\", credit: \"Admiy#8261\" },\n      { value: \"id-ID\", display: \"Bahasa Indonesia\", credit: \"alcyneous#2803\" },\n      // { value: \"ru\", display: \"Русский язык\", credit: \"kirillbarnaul#8499\" },\n      // { value: \"pt\", display: \"Português Brasileiro\", credit: \"Ash Niartis#5090\" },\n      {\n        value: \"de-DE\",\n        display: \"Deutsch\",\n        credit: \"Doubleturtle#3660\",\n      },\n      // { value: \"it\", display: \"Italiano\", credit: \"テオさん#0139\" },\n      { value: \"tr-TR\", display: \"Türkçe\", credit: \"creeperkafasipw#1861\" },\n      { value: \"vi-VN\", display: \"Tiếng Việt\", credit: \"Frincess\" },\n      { value: \"hu-HU\", display: \"Magyar\", credit: \"kuroihikikomori#7216\" },\n      // { value: \"th\", display: \"ไทย\", credit: \"SnowNeko#0282\" },\n      // { value: \"cimode\", display: \"Internal Translation Use\" },\n    ],\n    [],\n  );\n\n  const channelNamePrefs = useMemo(\n    () => [\n      { value: \"english_name\", display: t(\"English\") },\n      { value: \"name\", display: t(\"Original Name on YouTube (Japanese, etc)\") },\n    ],\n    [t],\n  );\n\n  const useEN = useStoreState((s) => s.settings.useEN);\n  const changeUseEN = useStoreActions((s) => s.settings.setUseEN);\n\n  const changeLanguage = (lng: string) => {\n    i18n.changeLanguage(lng);\n  };\n\n  return (\n    <>\n      <SettingsSection title={t(\"Interface Language\")}>\n        <Select\n          onChange={(e) => changeLanguage(e.target.value)}\n          defaultValue={i18n.language}\n        >\n          {displayLangPrefs.map((opt) => (\n            <option value={opt.value} key={`i18n-${opt.value}`}>\n              {opt.display}\n            </option>\n          ))}\n        </Select>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"end\"\n          ml=\"auto\"\n          opacity={0.66}\n        >\n          <Icon as={FaHeart} mr={1}></Icon>\n          {displayLangPrefs.find((opt) => opt.value === i18n.language)?.credit}\n        </Box>\n      </SettingsSection>\n      <SettingsSection title={t(\"Channel Name\")}>\n        <RadioGroup\n          defaultValue={useEN ? \"english_name\" : \"name\"}\n          onChange={(e) => changeUseEN(e === \"english_name\")}\n        >\n          <Stack>\n            {channelNamePrefs.map((opt) => (\n              <Radio value={opt.value} key={`useEN-${opt.value}`}>\n                {opt.display}\n              </Radio>\n            ))}\n          </Stack>\n        </RadioGroup>\n      </SettingsSection>\n    </>\n  );\n}\n","import {\n  Heading,\n  Icon,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  Text,\n} from \"@chakra-ui/react\";\nimport { useTranslation } from \"react-i18next\";\nimport { OrgPickerPanel } from \"../components/settings/OrgManagement\";\nimport { UserSettings } from \"../components/settings/UserSettings\";\nimport { ContainerInlay } from \"../components/layout/ContainerInlay\";\nimport { PageContainer } from \"../components/layout/PageContainer\";\nimport { LanguageSettings } from \"../components/settings/LanguageSettings\";\nimport { FaRegBuilding, FaRegUser } from \"react-icons/fa\";\nimport { IoLanguage } from \"react-icons/io5\";\nimport { Helmet } from \"react-helmet-async\";\n\nexport default function Settings() {\n  const { t } = useTranslation();\n\n  return (\n    <PageContainer>\n      <Helmet>\n        <title>{t(\"Settings\")} - Musicdex</title>\n      </Helmet>\n      <ContainerInlay>\n        <Heading size=\"lg\" py={5}>\n          {t(\"Settings\")}\n        </Heading>\n        <Tabs\n          orientation=\"vertical\"\n          size=\"lg\"\n          align=\"start\"\n          flexDir={{ base: \"column\", md: \"row\" }}\n          isLazy\n        >\n          <TabList h=\"fit-content\" minW={{ base: \"full\", md: 72 }}>\n            <Tab\n              fontSize=\"lg\"\n              fontWeight={600}\n              justifyContent=\"flex-start\"\n              gap={2}\n            >\n              <Icon as={FaRegUser} mr={1}></Icon>\n              {t(\"User Preferences\")}\n            </Tab>\n            <Tab\n              fontSize=\"lg\"\n              fontWeight={600}\n              justifyContent=\"flex-start\"\n              gap={2}\n            >\n              <Icon as={IoLanguage} mr={1}></Icon>\n              {t(\"Language Preferences\")}\n            </Tab>\n            <Tab\n              fontSize=\"lg\"\n              fontWeight={600}\n              justifyContent=\"flex-start\"\n              gap={2}\n            >\n              <Icon as={FaRegBuilding} mr={1}></Icon>\n              {t(\"Organization Ordering\")}\n            </Tab>\n          </TabList>\n          <TabPanels\n            borderColor=\"chakra-border-color\"\n            borderLeftWidth={{ base: 0, md: 1 }}\n            pl={{ base: 0, md: 4 }}\n          >\n            <TabPanel px={0}>\n              <UserSettings />\n            </TabPanel>\n            <TabPanel px={0}>\n              <LanguageSettings />\n            </TabPanel>\n            <TabPanel px={0}>\n              <Text my={2} fontStyle=\"italic\">\n                {t(\"Drag and Drop to reorder list of orgs in the org dropdown\")}\n              </Text>\n              <OrgPickerPanel />\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </ContainerInlay>\n    </PageContainer>\n  );\n}\n"],"names":["SettingsSection","title","children","justify","spacingX","spacingY","my","justifyContent","minH","flexGrow","mb","size","flexBasis","alignItems","flexDirection","UserSettings","toast","useToast","position","t","useTranslation","isLoggedIn","user","AxiosInstance","refreshUser","useClient","isMobile","useBreakpointValue","base","md","newUsername","setNewUsername","useState","mutate","changeName","isLoading","useMutation","async","method","data","name","payload","onSuccess","status","w","p","spacing","boxSize","bg","src","id","undefined","align","fontWeight","wordBreak","username","textTransform","fontSize","color","role","contribution_count","label","google_id","colorScheme","as","FaGoogle","discord_id","FaDiscord","twitter_id","FaTwitter","created_at","format","Date","placeholder","_placeholder","type","value","onChange","e","target","trim","roundedLeft","isDisabled","onClick","LoginButtons","L","LoginPanel","LanguageSettings","i18n","displayLangPrefs","useMemo","display","credit","channelNamePrefs","useEN","useStoreState","s","settings","changeUseEN","useStoreActions","setUseEN","changeLanguage","lng","defaultValue","language","map","opt","ml","opacity","FaHeart","mr","find","Settings","PageContainer","ContainerInlay","C","py","orientation","flexDir","isLazy","h","minW","gap","FaRegUser","IoLanguage","FaRegBuilding","borderColor","borderLeftWidth","pl","px","fontStyle"],"sourceRoot":""}